# Markdown 文件处理脚本使用说明

## 目录

[1. 目录](#目录)

[2. 简介](#简介)

[3. 安装依赖](#安装依赖)

[4. 使用方法](#使用方法)

    [• 运行脚本](#运行脚本)

[5. 脚本功能详解](#脚本功能详解)

    [• 去除标题中的数字前缀](#去除标题中的数字前缀)

    [• 主要函数说明](#主要函数说明)

[6. 使用示例](#使用示例)

[7. 注意事项](#注意事项)

[8. 联系方式](#联系方式)



## 简介

本脚本用于处理Markdown文件，主要功能包括：
1. 去除Markdown标题中的数字前缀。
2. 生成美观的目录，并将其插入到文档中。
3. 忽略代码块中的标题。

## 安装依赖

本脚本使用Python编写，确保你的系统已安装Python 3。你可以通过以下命令安装所需的依赖：

```sh
pip install -r requirements.txt
```

`requirements.txt` 文件内容如下：

```
logging
re
os
```

## 使用方法

### 运行脚本

1. **克隆或下载脚本**：
   将脚本文件 [`process_markdown.py`](/Markdown/Scripts/process_markdown.py) 下载到你的本地机器上。

2. **运行脚本**：
   打开终端或命令行工具，导航到脚本所在的目录，然后运行以下命令：

   ```sh
   python process_markdown.py
   ```

3. **输入目录路径**：
   脚本会提示你输入Markdown文件所在的目录路径。例如：

   ```sh
   请输入Markdown文件所在的目录路径：/path/to/your/markdown/files
   ```

4. **查看处理结果**：
   脚本会递归处理指定目录及其子目录中的所有Markdown文件，并在处理完成后输出提示信息。

## 脚本功能详解

### 去除标题中的数字前缀

脚本会遍历Markdown文件中的所有标题，去除标题中的数字前缀。例如：

- 原始标题：`# 1.1 1.1.1 15.24 示例标题`
- 处理后标题：`# 示例标题`

### 生成目录

脚本会提取Markdown文件中的所有标题，并生成一个美观的目录。目录会自动插入到文档中第一个一级标题之后。生成的目录具有以下特点：

1. 自动为二级标题添加数字前缀
2. 为三级标题添加层级编号
3. 自动处理重复的标题链接
4. 忽略代码块中的标题

### 主要函数说明

1. **`remove_number_prefix_from_headers`**：
   - 去除标题中的数字前缀
   - 保留标题的实际内容

2. **`extract_headers`**：
   - 提取文档中的所有标题
   - 忽略代码块中的标题
   - 返回标题级别和文本

3. **`generate_toc`**：
   - 生成美观的目录
   - 添加标题编号
   - 处理重复的标题链接

4. **`process_file`**：
   - 处理单个Markdown文件
   - 自动备份原始内容
   - 处理完成后输出日志

5. **`process_directory`**：
   - 递归处理目录中的所有Markdown文件
   - 自动跳过非Markdown文件

## 使用示例

以下是一个简单的示例，展示脚本如何处理Markdown文件：

```markdown
# 文档标题

## 第一章

### 第一节

## 第二章

### 示例代码
```python
# 这是一个示例
## 这不是真正的标题
```

### 第二节
```
处理后的文件将变为：

```markdown
# 文档标题

## 第一章

### 第一节

## 第二章

### 示例代码
```python
# 这是一个示例
## 这不是真正的标题
```

### 第二节
```

## 注意事项

1. **备份文件**：在运行脚本之前，建议备份原始文件，以防止意外的数据丢失。
2. **文件编码**：确保Markdown文件的编码为UTF-8，以避免字符乱码问题。
3. **代码块处理**：脚本会自动忽略代码块中的标题标记，不会将其添加到目录中。
4. **重复标题**：对于重复的标题，脚本会自动为其生成唯一的链接标识符。

## 联系方式

如果有任何问题或建议，请联系 [wenliang_zeng416@163.com]。
